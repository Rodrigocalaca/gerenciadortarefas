name: CI/CD Pipeline Java com H2

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read
  packages: write

jobs:
  build-and-test:
    name: Build & Test com Java
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Configurar JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: maven

      - name: Build e Testes com Maven
        run: ./mvnw -B verify

      - name: Publicar JAR como artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*.jar

  build-and-push-docker:
    name: Construir e Publicar Imagem Docker
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    env:
      REPO: ${{ github.repository }}

    steps:
      - uses: actions/checkout@v4

      - name: Login no GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Construir e enviar a imagem Docker
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.sha }}
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}

  deploy-staging:
    name: Deploy em Homologação
    runs-on: ubuntu-latest
    needs: build-and-push-docker
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: staging
      url: https://staging.gerenciador-tarefas.com

    env:
      REPO: ${{ github.repository }}

    steps:
      - name: Deploy para ambiente de Staging
        run: |
          echo "Deploy para Staging..."
          echo "Baixando imagem: ghcr.io/${{ env.REPO }}:${{ github.sha }}"
          # Exemplo (placeholder):
          # ssh user@staging 'docker login ghcr.io -u USER -p TOKEN && docker pull ghcr.io/<repo>:<sha> && docker stop app || true && docker rm app || true && docker run -d -p 80:8080 --name app ghcr.io/<repo>:<sha>'

  deploy-production:
    name: Deploy em Produção
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: production
      url: https://gerenciador-tarefas.com

    env:
      REPO: ${{ github.repository }}

    steps:
      - name: Deploy para ambiente de Produção
        run: |
          echo "Deploy para Produção..."
          echo "Baixando imagem: ghcr.io/${{ env.REPO }}:${{ github.sha }}"
          # Mesmo script de cima, apontando para o host de produção
